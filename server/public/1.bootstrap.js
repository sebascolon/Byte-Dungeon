(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[1],{

/***/ "./bd-pack/byte_dungeon.js":
/*!*********************************!*\
  !*** ./bd-pack/byte_dungeon.js ***!
  \*********************************/
/*! exports provided: greet, get_char, execute_request, insert_request, sort_requests, get_requests, board_to_string, generate_request, find_character, resize_board, get_character, collect_cell_options, load_game, toggle_cell, reset_session, output_grid, get_dimensions, generate_tutorial, export_game, add_character, give_item, place_token, give_ability, add_item, add_ability, add_effect, get_cell_distance, __wbg_log_13a8b9bdc9ade567, __wbg_alert_37f6babd16c52b7e, __wbindgen_object_drop_ref, __wbindgen_json_parse, __wbindgen_json_serialize */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./byte_dungeon_bg.wasm */ \"./bd-pack/byte_dungeon_bg.wasm\");\n/* harmony import */ var _byte_dungeon_bg_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./byte_dungeon_bg.js */ \"./bd-pack/byte_dungeon_bg.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"greet\", function() { return _byte_dungeon_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"greet\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"get_char\", function() { return _byte_dungeon_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"get_char\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"execute_request\", function() { return _byte_dungeon_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"execute_request\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"insert_request\", function() { return _byte_dungeon_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"insert_request\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"sort_requests\", function() { return _byte_dungeon_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"sort_requests\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"get_requests\", function() { return _byte_dungeon_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"get_requests\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"board_to_string\", function() { return _byte_dungeon_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"board_to_string\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"generate_request\", function() { return _byte_dungeon_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"generate_request\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"find_character\", function() { return _byte_dungeon_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"find_character\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"resize_board\", function() { return _byte_dungeon_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"resize_board\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"get_character\", function() { return _byte_dungeon_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"get_character\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"collect_cell_options\", function() { return _byte_dungeon_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"collect_cell_options\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"load_game\", function() { return _byte_dungeon_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"load_game\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"toggle_cell\", function() { return _byte_dungeon_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"toggle_cell\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"reset_session\", function() { return _byte_dungeon_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"reset_session\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"output_grid\", function() { return _byte_dungeon_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"output_grid\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"get_dimensions\", function() { return _byte_dungeon_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"get_dimensions\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"generate_tutorial\", function() { return _byte_dungeon_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"generate_tutorial\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"export_game\", function() { return _byte_dungeon_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"export_game\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"add_character\", function() { return _byte_dungeon_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"add_character\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"give_item\", function() { return _byte_dungeon_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"give_item\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"place_token\", function() { return _byte_dungeon_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"place_token\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"give_ability\", function() { return _byte_dungeon_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"give_ability\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"add_item\", function() { return _byte_dungeon_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"add_item\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"add_ability\", function() { return _byte_dungeon_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"add_ability\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"add_effect\", function() { return _byte_dungeon_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"add_effect\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"get_cell_distance\", function() { return _byte_dungeon_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"get_cell_distance\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_log_13a8b9bdc9ade567\", function() { return _byte_dungeon_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_log_13a8b9bdc9ade567\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbg_alert_37f6babd16c52b7e\", function() { return _byte_dungeon_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbg_alert_37f6babd16c52b7e\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_object_drop_ref\", function() { return _byte_dungeon_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbindgen_object_drop_ref\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_json_parse\", function() { return _byte_dungeon_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbindgen_json_parse\"]; });\n\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_json_serialize\", function() { return _byte_dungeon_bg_js__WEBPACK_IMPORTED_MODULE_1__[\"__wbindgen_json_serialize\"]; });\n\n\n\n\n//# sourceURL=webpack:///./bd-pack/byte_dungeon.js?");

/***/ }),

/***/ "./bd-pack/byte_dungeon_bg.js":
/*!************************************!*\
  !*** ./bd-pack/byte_dungeon_bg.js ***!
  \************************************/
/*! exports provided: greet, get_char, execute_request, insert_request, sort_requests, get_requests, board_to_string, generate_request, find_character, resize_board, get_character, collect_cell_options, load_game, toggle_cell, reset_session, output_grid, get_dimensions, generate_tutorial, export_game, add_character, give_item, place_token, give_ability, add_item, add_ability, add_effect, get_cell_distance, __wbg_log_13a8b9bdc9ade567, __wbg_alert_37f6babd16c52b7e, __wbindgen_object_drop_ref, __wbindgen_json_parse, __wbindgen_json_serialize */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"greet\", function() { return greet; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"get_char\", function() { return get_char; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"execute_request\", function() { return execute_request; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"insert_request\", function() { return insert_request; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"sort_requests\", function() { return sort_requests; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"get_requests\", function() { return get_requests; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"board_to_string\", function() { return board_to_string; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generate_request\", function() { return generate_request; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"find_character\", function() { return find_character; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"resize_board\", function() { return resize_board; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"get_character\", function() { return get_character; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"collect_cell_options\", function() { return collect_cell_options; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"load_game\", function() { return load_game; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"toggle_cell\", function() { return toggle_cell; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"reset_session\", function() { return reset_session; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"output_grid\", function() { return output_grid; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"get_dimensions\", function() { return get_dimensions; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"generate_tutorial\", function() { return generate_tutorial; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"export_game\", function() { return export_game; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"add_character\", function() { return add_character; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"give_item\", function() { return give_item; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"place_token\", function() { return place_token; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"give_ability\", function() { return give_ability; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"add_item\", function() { return add_item; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"add_ability\", function() { return add_ability; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"add_effect\", function() { return add_effect; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"get_cell_distance\", function() { return get_cell_distance; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_log_13a8b9bdc9ade567\", function() { return __wbg_log_13a8b9bdc9ade567; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbg_alert_37f6babd16c52b7e\", function() { return __wbg_alert_37f6babd16c52b7e; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_object_drop_ref\", function() { return __wbindgen_object_drop_ref; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_json_parse\", function() { return __wbindgen_json_parse; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"__wbindgen_json_serialize\", function() { return __wbindgen_json_serialize; });\n/* harmony import */ var _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./byte_dungeon_bg.wasm */ \"./bd-pack/byte_dungeon_bg.wasm\");\n\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachedUint8Memory0;\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0.byteLength === 0) {\n        cachedUint8Memory0 = new Uint8Array(_byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nconst lTextEncoder = typeof TextEncoder === 'undefined' ? (0, module.require)('util').TextEncoder : TextEncoder;\n\nlet cachedTextEncoder = new lTextEncoder('utf-8');\n\nconst encodeString = (typeof cachedTextEncoder.encodeInto === 'function'\n    ? function (arg, view) {\n    return cachedTextEncoder.encodeInto(arg, view);\n}\n    : function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n});\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length);\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len);\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3);\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nlet cachedInt32Memory0;\nfunction getInt32Memory0() {\n    if (cachedInt32Memory0.byteLength === 0) {\n        cachedInt32Memory0 = new Int32Array(_byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n    }\n    return cachedInt32Memory0;\n}\n/**\n*/\nfunction greet() {\n    _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"greet\"]();\n}\n\n/**\n* @param {number} row\n* @param {number} col\n* @returns {any}\n*/\nfunction get_char(row, col) {\n    const ret = _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"get_char\"](row, col);\n    return takeObject(ret);\n}\n\n/**\n* @param {any} request\n*/\nfunction execute_request(request) {\n    _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"execute_request\"](addHeapObject(request));\n}\n\n/**\n* @param {string} token\n* @param {any} request\n*/\nfunction insert_request(token, request) {\n    _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"insert_request\"](token.codePointAt(0), addHeapObject(request));\n}\n\n/**\n*/\nfunction sort_requests() {\n    _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"sort_requests\"]();\n}\n\n/**\n* @returns {any}\n*/\nfunction get_requests() {\n    const ret = _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"get_requests\"]();\n    return takeObject(ret);\n}\n\n/**\n* @returns {any}\n*/\nfunction board_to_string() {\n    const ret = _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"board_to_string\"]();\n    return takeObject(ret);\n}\n\n/**\n* @param {number} a_type\n* @param {string} key\n* @param {string} tok\n* @param {number} end_row\n* @param {number} end_col\n* @returns {any}\n*/\nfunction generate_request(a_type, key, tok, end_row, end_col) {\n    const ptr0 = passStringToWasm0(key, _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"], _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_realloc\"]);\n    const len0 = WASM_VECTOR_LEN;\n    const ret = _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"generate_request\"](a_type, ptr0, len0, tok.codePointAt(0), end_row, end_col);\n    return takeObject(ret);\n}\n\n/**\n* @param {number} row\n* @param {number} col\n* @returns {any}\n*/\nfunction find_character(row, col) {\n    const ret = _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"find_character\"](row, col);\n    return takeObject(ret);\n}\n\n/**\n* @param {number} rows\n* @param {number} cols\n*/\nfunction resize_board(rows, cols) {\n    _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"resize_board\"](rows, cols);\n}\n\n/**\n* @param {string} key\n* @returns {any}\n*/\nfunction get_character(key) {\n    const ret = _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"get_character\"](key.codePointAt(0));\n    return takeObject(ret);\n}\n\n/**\n* @param {number} row\n* @param {number} column\n* @param {number} range\n* @param {boolean} target\n* @returns {any}\n*/\nfunction collect_cell_options(row, column, range, target) {\n    const ret = _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"collect_cell_options\"](row, column, range, target);\n    return takeObject(ret);\n}\n\n/**\n* @param {any} data\n*/\nfunction load_game(data) {\n    _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"load_game\"](addHeapObject(data));\n}\n\n/**\n* @param {number} row\n* @param {number} col\n* @returns {any}\n*/\nfunction toggle_cell(row, col) {\n    const ret = _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"toggle_cell\"](row, col);\n    return takeObject(ret);\n}\n\n/**\n*/\nfunction reset_session() {\n    _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"reset_session\"]();\n}\n\n/**\n*/\nfunction output_grid() {\n    _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"output_grid\"]();\n}\n\n/**\n* @returns {any}\n*/\nfunction get_dimensions() {\n    const ret = _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"get_dimensions\"]();\n    return takeObject(ret);\n}\n\n/**\n*/\nfunction generate_tutorial() {\n    _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"generate_tutorial\"]();\n}\n\n/**\n* @returns {any}\n*/\nfunction export_game() {\n    const ret = _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"export_game\"]();\n    return takeObject(ret);\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n/**\n* @param {string} tk\n* @param {string} nm\n* @param {number} sp\n* @param {number} iv\n* @param {number} hp\n* @param {number} mp\n* @param {number} st\n* @param {number} dx\n* @param {number} cn\n* @param {number} it\n* @param {number} ws\n* @param {number} ch\n* @param {string | undefined} tr\n*/\nfunction add_character(tk, nm, sp, iv, hp, mp, st, dx, cn, it, ws, ch, tr) {\n    const ptr0 = passStringToWasm0(tk, _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"], _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_realloc\"]);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(nm, _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"], _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_realloc\"]);\n    const len1 = WASM_VECTOR_LEN;\n    var ptr2 = isLikeNone(tr) ? 0 : passStringToWasm0(tr, _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"], _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_realloc\"]);\n    var len2 = WASM_VECTOR_LEN;\n    _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"add_character\"](ptr0, len0, ptr1, len1, sp, iv, hp, mp, st, dx, cn, it, ws, ch, ptr2, len2);\n}\n\n/**\n* @param {string} token\n* @param {string} item_key\n*/\nfunction give_item(token, item_key) {\n    const ptr0 = passStringToWasm0(token, _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"], _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_realloc\"]);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(item_key, _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"], _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_realloc\"]);\n    const len1 = WASM_VECTOR_LEN;\n    _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"give_item\"](ptr0, len0, ptr1, len1);\n}\n\n/**\n* @param {string} token\n* @param {number} row\n* @param {number} col\n*/\nfunction place_token(token, row, col) {\n    const ptr0 = passStringToWasm0(token, _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"], _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_realloc\"]);\n    const len0 = WASM_VECTOR_LEN;\n    _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"place_token\"](ptr0, len0, row, col);\n}\n\n/**\n* @param {string} token\n* @param {string} abil_key\n*/\nfunction give_ability(token, abil_key) {\n    const ptr0 = passStringToWasm0(token, _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"], _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_realloc\"]);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(abil_key, _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"], _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_realloc\"]);\n    const len1 = WASM_VECTOR_LEN;\n    _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"give_ability\"](ptr0, len0, ptr1, len1);\n}\n\n/**\n* @param {string} nm\n* @param {number} us\n* @param {number} wgt\n* @param {string | undefined} slot\n* @param {string | undefined} effx\n* @param {string | undefined} abil\n*/\nfunction add_item(nm, us, wgt, slot, effx, abil) {\n    const ptr0 = passStringToWasm0(nm, _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"], _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_realloc\"]);\n    const len0 = WASM_VECTOR_LEN;\n    var ptr1 = isLikeNone(slot) ? 0 : passStringToWasm0(slot, _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"], _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_realloc\"]);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = isLikeNone(effx) ? 0 : passStringToWasm0(effx, _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"], _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_realloc\"]);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = isLikeNone(abil) ? 0 : passStringToWasm0(abil, _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"], _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_realloc\"]);\n    var len3 = WASM_VECTOR_LEN;\n    _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"add_item\"](ptr0, len0, us, wgt, ptr1, len1, ptr2, len2, ptr3, len3);\n}\n\n/**\n* @param {string} nm\n* @param {number} ran\n* @param {number} ap\n* @param {number} low\n* @param {number} high\n* @param {string | undefined} stat\n* @param {string | undefined} req\n* @param {string | undefined} tar\n* @param {string | undefined} cas\n*/\nfunction add_ability(nm, ran, ap, low, high, stat, req, tar, cas) {\n    const ptr0 = passStringToWasm0(nm, _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"], _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_realloc\"]);\n    const len0 = WASM_VECTOR_LEN;\n    var ptr1 = isLikeNone(stat) ? 0 : passStringToWasm0(stat, _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"], _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_realloc\"]);\n    var len1 = WASM_VECTOR_LEN;\n    var ptr2 = isLikeNone(req) ? 0 : passStringToWasm0(req, _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"], _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_realloc\"]);\n    var len2 = WASM_VECTOR_LEN;\n    var ptr3 = isLikeNone(tar) ? 0 : passStringToWasm0(tar, _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"], _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_realloc\"]);\n    var len3 = WASM_VECTOR_LEN;\n    var ptr4 = isLikeNone(cas) ? 0 : passStringToWasm0(cas, _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"], _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_realloc\"]);\n    var len4 = WASM_VECTOR_LEN;\n    _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"add_ability\"](ptr0, len0, ran, ap, low, high, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4);\n}\n\n/**\n* @param {string} nm\n* @param {number} dur\n* @param {string} target\n* @param {number} low\n* @param {number} high\n* @param {boolean} temp\n*/\nfunction add_effect(nm, dur, target, low, high, temp) {\n    const ptr0 = passStringToWasm0(nm, _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"], _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_realloc\"]);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(target, _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"], _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_realloc\"]);\n    const len1 = WASM_VECTOR_LEN;\n    _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"add_effect\"](ptr0, len0, dur, ptr1, len1, low, high, temp);\n}\n\n/**\n* @param {number} src_row\n* @param {number} src_col\n* @param {number} end_row\n* @param {number} end_col\n* @returns {number}\n*/\nfunction get_cell_distance(src_row, src_col, end_row, end_col) {\n    const ret = _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"get_cell_distance\"](src_row, src_col, end_row, end_col);\n    return ret;\n}\n\nfunction __wbg_log_13a8b9bdc9ade567(arg0, arg1) {\n    console.log(getStringFromWasm0(arg0, arg1));\n};\n\nfunction __wbg_alert_37f6babd16c52b7e(arg0, arg1) {\n    alert(getStringFromWasm0(arg0, arg1));\n};\n\nfunction __wbindgen_object_drop_ref(arg0) {\n    takeObject(arg0);\n};\n\nfunction __wbindgen_json_parse(arg0, arg1) {\n    const ret = JSON.parse(getStringFromWasm0(arg0, arg1));\n    return addHeapObject(ret);\n};\n\nfunction __wbindgen_json_serialize(arg0, arg1) {\n    const obj = getObject(arg1);\n    const ret = JSON.stringify(obj === undefined ? null : obj);\n    const ptr0 = passStringToWasm0(ret, _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_malloc\"], _byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"__wbindgen_realloc\"]);\n    const len0 = WASM_VECTOR_LEN;\n    getInt32Memory0()[arg0 / 4 + 1] = len0;\n    getInt32Memory0()[arg0 / 4 + 0] = ptr0;\n};\n\ncachedInt32Memory0 = new Int32Array(_byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\ncachedUint8Memory0 = new Uint8Array(_byte_dungeon_bg_wasm__WEBPACK_IMPORTED_MODULE_0__[\"memory\"].buffer);\n\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../node_modules/webpack/buildin/harmony-module.js */ \"./node_modules/webpack/buildin/harmony-module.js\")(module)))\n\n//# sourceURL=webpack:///./bd-pack/byte_dungeon_bg.js?");

/***/ }),

/***/ "./bd-pack/byte_dungeon_bg.wasm":
/*!**************************************!*\
  !*** ./bd-pack/byte_dungeon_bg.wasm ***!
  \**************************************/
/*! exports provided: memory, greet, get_char, execute_request, insert_request, sort_requests, get_requests, board_to_string, generate_request, find_character, resize_board, get_character, collect_cell_options, load_game, toggle_cell, reset_session, output_grid, get_dimensions, generate_tutorial, export_game, add_character, give_item, place_token, give_ability, add_item, add_ability, add_effect, get_cell_distance, __wbindgen_malloc, __wbindgen_realloc */
/***/ (function(module, exports, __webpack_require__) {

eval("\"use strict\";\n// Instantiate WebAssembly module\nvar wasmExports = __webpack_require__.w[module.i];\n__webpack_require__.r(exports);\n// export exports from WebAssembly module\nfor(var name in wasmExports) if(name != \"__webpack_init__\") exports[name] = wasmExports[name];\n// exec imports from WebAssembly module (for esm order)\n/* harmony import */ var m0 = __webpack_require__(/*! ./byte_dungeon_bg.js */ \"./bd-pack/byte_dungeon_bg.js\");\n\n\n// exec wasm module\nwasmExports[\"__webpack_init__\"]()\n\n//# sourceURL=webpack:///./bd-pack/byte_dungeon_bg.wasm?");

/***/ }),

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var firebase_app__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! firebase/app */ \"./node_modules/firebase/app/dist/index.esm.js\");\n/* harmony import */ var firebase_auth__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! firebase/auth */ \"./node_modules/firebase/auth/dist/index.esm.js\");\n/* harmony import */ var firebase_firestore__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! firebase/firestore */ \"./node_modules/firebase/firestore/dist/index.esm.js\");\n/* harmony import */ var socket_io_client__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! socket.io-client */ \"./node_modules/socket.io-client/build/esm/index.js\");\n/* harmony import */ var _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./bd-pack/byte_dungeon */ \"./bd-pack/byte_dungeon.js\");\n\n\n\n\n\n\n\nconst socket = Object(socket_io_client__WEBPACK_IMPORTED_MODULE_3__[\"io\"])('https://western-rider-361904.wm.r.appspot.com');\nsocket.on(\"connect\", () => {\n    logMessage(`Connected to socket with id: ${socket.id} `);\n})\n// Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nconst firebaseConfig = {\n  apiKey: \"AIzaSyAGcx717SK13eLYcMiL-Dxv38S7RvG52iY\",\n  authDomain: \"byte-dungeon-c31b5.firebaseapp.com\",\n  projectId: \"byte-dungeon-c31b5\",\n  storageBucket: \"byte-dungeon-c31b5.appspot.com\",\n  messagingSenderId: \"1051992531395\",\n  appId: \"1:1051992531395:web:59c14e2c505c08978d1d76\",\n  measurementId: \"G-26W1GG8662\"\n};\n\n// Initialize Firebase, Auth, and Firestore\nconst fb_app = Object(firebase_app__WEBPACK_IMPORTED_MODULE_0__[\"initializeApp\"])(firebaseConfig);\nconst db = Object(firebase_firestore__WEBPACK_IMPORTED_MODULE_2__[\"getFirestore\"])(fb_app);\n\nlet auth = Object(firebase_auth__WEBPACK_IMPORTED_MODULE_1__[\"getAuth\"])();\nlet googleProv = new firebase_auth__WEBPACK_IMPORTED_MODULE_1__[\"GoogleAuthProvider\"]();\n\n// Allocate characters to an id\n// each character has a map, onclick use has(uid)?\n\n// while dm, roll button should be to end turn for all\n\n// Initialize PIXI graphics\nconst Application = PIXI.Application;\nconst application = new Application({\n    view: document.getElementById(\"grid\"),\n    width: window.innerWidth *.75,\n    height: window.innerHeight * 0.85,\n    transparent: false,\n    antialias: true\n});\napplication.renderer.backgroundColor = 0x1f1e1c;\n// rgb(240, 233, 213)\nconst hd_moji = new PIXI.TextStyle({ fontSize: 92, fill: \"white\" });\nconst style = new PIXI.TextStyle({\n    fontFamily: 'Arial',\n    dropShadow: true,\n    dropShadowAlpha: 0.8,\n    dropShadowAngle: 2.1,\n    dropShadowBlur: 4,\n    dropShadowColor: '#444444',\n    dropShadowDistance: 8,\n    fill: ['#ffffff'],\n    stroke: '#FFFFFF',\n    fontSize: 60,\n    fontWeight: 'lighter',\n    lineJoin: 'round',\n    strokeThickness: 6,\n});\n\nconst basicText = new PIXI.Text('Welcome to Byte Dungeon', style);\nvar square_size = window.innerWidth/24;\ndraw_lines(window.innerWidth * 0.75/square_size, window.innerHeight * 0.84/square_size, \"\")\nbasicText.x = 20;\nbasicText.y = 20;\napplication.stage.addChild(basicText);\n\n\ndocument.getElementById(\"roll-button\").onclick = initialSignIn;\nlogMessage('Icons made by <a href=\"https://www.freepik.com\" title=\"Freepik\"> Freepik </a> from ' + \n    '<a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a>');\nlogMessage(\"Welcome to Byte Dungeon v1\");\n\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nvar current_user;\nvar in_game_name; \nvar current_session;\nvar access_req_list = new Array();\nvar ordered_requests = new Array();\nvar current_game;\n\nvar set_assignments = new Map();\nvar requests = new Map();\nvar token_to_user = new Map();\n\nvar game_backup;\nvar user_sets = null;\nvar current_abil_key;\n\nvar priorButton;\nvar token_data;\nvar action_type;\n\nvar current_token;\nvar tokens = new Map();\nvar temp_toks = new Map();\nvar options = new Map();\n\nlet button1 = document.getElementById(\"button1\");\nlet button2 = document.getElementById(\"button2\");\nlet button3 = document.getElementById(\"button3\");\nlet button4 = document.getElementById(\"button4\");\n\nvar token_chars = ['🧑','👩','👹','👺','👿','👻','💀','🧙','🧚','🧛','🧝','🧞','🧟','👤','🌬','🐾','🐺','🐎','🦇','🐉','🕷',\n    '🗡','⚔','🛡','🏹','👊','🔱','👑','⚒','🎶','📿','⚠','🚫','🔴','🟠','🟡','🟢','🔵','🟣','🟤','⚪'];\nsocket.on(\"socketLog\", (msg) => { logMessage(msg) });\nvar coll = document.getElementsByClassName(\"collapsible\");\nvar i;\nfor (i = 0; i < coll.length; i++) {\n  coll[i].addEventListener(\"click\", function() {\n    this.classList.toggle(\"active\");\n    var content = this.nextElementSibling;\n    if (content.style.maxHeight)\n        { content.style.maxHeight = null; } \n    else \n        { content.style.maxHeight = content.scrollHeight + \"px\"; } \n  });\n}\n\nfunction clickToken() {\n    clearTempTokens();\n    options.clear();\n    console.log(tokens.get(this)[0], tokens.get(this)[1]);\n    let tok = _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"get_char\"](tokens.get(this)[0], tokens.get(this)[1]); // needs try catch\n    console.log(tok);\n    if (tok == '0' || tok == '1') { alert(\"Couldn't get the char value for this clickable! Please try again\"); return }\n    console.log(set_assignments);\n    if (!set_assignments.has(tok)) { blockCard(tok); return }   // rather than has, change this to char -> double (action points)\n    if (set_assignments.get(tok) < 1) { blockCard(tok); return } // Make a different card\n    token_data = _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"get_character\"](tok);\n    current_token = tok;\n    console.log(token_data);\n    button1.disabled = false;\n    button1.onclick = getMoves;\n    loadItems();\n    loadAbles();\n    loadEquip();\n    // get tokens' items\n    // add to list of content under button 3\n    // enable button 3\n    // set each interior button to getItems\n    renderCard();\n}\n\nfunction blockCard(key) {\n    document.getElementById(\"content2\").innerHTML = '';\n    document.getElementById(\"content3\").innerHTML = '';\n    document.getElementById(\"content4\").innerHTML = '';\n\n    button1.disabled = true;\n    button2.disabled = true;\n    button3.disabled = true;\n    button4.disabled = true;\n\n    document.getElementById(\"card\").innerHTML = '<h1 class=\"card-alt\">Content Obscured</h1>' + \n        '<button id=\"access-button\" class=\"collapsible\">Request access to this character </button>';\n    document.getElementById(\"access-button\").onclick = accessRequest;\n    options.set(\"access-button\", key);\n}\n\nfunction accessRequest() {\n    console.log(\"HERE\");\n    console.log(current_session, current_user, in_game_name, options.get(\"access-button\"));\n    socket.emit(\"requestAccess\", current_session, current_user, in_game_name, options.get(\"access-button\"));\n}\n\nsocket.on(\"loadAccessRequests\", (list) => {\n    console.log(list);\n    access_req_list = list;\n    listRequests();\n})\n\nfunction listRequests() {\n    document.getElementById(\"card\").innerHTML = '<h1 class=\"card-head\">Requests</h1>';\n    for(var i = 0; i < access_req_list.length; i++) {\n        document.getElementById(\"card\").innerHTML = document.getElementById(\"card\").innerHTML + \n        '<div style=\"border-bottom: 2.5px solid rgb(100, 100, 100)\" id=\"access-div' + i +  '\">' +\n        '<p class=\"card-alt\">' + access_req_list[i].display_name + ' is requesting access to ' + access_req_list[i].token + '</p>' +\n        '<button style=\"margin-left:2.5px;margin-bottom:2.5px;\" id=\"access-approve' + i + '\"> Approve' + '</button>' + \n        '<button style=\"margin-left:2.5px;margin-bottom:2.5px;\" id=\"access-decline' + i + '\"> Decline' + '</button>' + \n        '</div>';\n        options.set('access-approve' + i, i);\n        options.set('access-decline' + i, i);\n    }\n    for(var i = 0; i < access_req_list.length; i++) {\n        document.getElementById(\"access-approve\" + i.toString()).onclick = grantAccess;\n        document.getElementById(\"access-decline\" + i.toString()).onclick = removeAccess;\n    }\n\n    console.log(ordered_requests);\n    for(var i = 0; i < ordered_requests.length; i++) {\n        let str = '';\n        switch(ordered_requests[i].action_type) {\n            case 0: str = `${ordered_requests[i].caster} moves to (${ordered_requests[i].target_cell[0]}, ${ordered_requests[i].target_cell[1]})`; break;\n            case 1: str = `${ordered_requests[i].caster} uses ${game_backup.characters[ordered_requests[i].caster].sheet.items[ordered_requests[i].subtype_key].name}`; break;\n            case 2: str = `${ordered_requests[i].caster} uses ${game_backup.abilities[ordered_requests[i].subtype_key].name}`; break;\n            case 3: str =`${ordered_requests[i].caster} unequips item from ${ordered_requests[i].subtype_key}`; break;\n            default:str = 'Error occured when loading request'; break;\n          }\n        document.getElementById(\"card\").innerHTML = document.getElementById(\"card\").innerHTML + \n        '<div style=\"border-bottom: 2.5px solid rgb(100, 100, 100)\" id=\"req-div' + i +  '\">' +\n        '<p class=\"card-alt\">' + str + '</p>' +\n        '<button style=\"margin-left:2.5px;margin-bottom:2.5px;\" id=\"req-approve' + i + '\"> Approve' + '</button>' + \n        '<button style=\"margin-left:2.5px;margin-bottom:2.5px;\" id=\"req-decline' + i + '\"> Decline' + '</button>' + \n        '</div>';\n        options.set('req-approve' + i, {index: i, request: ordered_requests[i], user: token_to_user.get(ordered_requests[i].caster), msg: str});\n        options.set('req-decline' + i, i);\n    }\n    for(var i = 0; i < ordered_requests.length; i++) {\n        if (ordered_requests[i].action_type == 2) { document.getElementById(\"req-approve\" + i.toString()).onclick = deferToRoll; }\n        else { document.getElementById(\"req-approve\" + i.toString()).onclick = approveRequest; }\n        document.getElementById(\"req-decline\" + i.toString()).onclick = declineRequest;\n    }\n}\n\nfunction deferToRoll() {\n    for(var i = 0; i < access_req_list.length; i++) {\n        document.getElementById(\"access-approve\" + i.toString()).disabled = true;\n        document.getElementById(\"access-decline\" + i.toString()).disabled = true;\n    }\n    for(var i = 0; i < ordered_requests.length; i++) {\n        document.getElementById(\"req-approve\" + i.toString()).disabled = true;\n        document.getElementById(\"req-decline\" + i.toString()).disabled = true;\n    }\n    options.set(\"req-decline\" + options.get(this.id).index.toString(), options.get(this.id));\n    document.getElementById(\"req-decline\" + options.get(this.id).index).disabled = false;\n    document.getElementById(\"req-decline\" + options.get(this.id).index).onclick = cancelRoll;\n    socket.emit(\"emitRollRequest\", current_session, options.get(this.id));\n}\n\n// calculate the modifier when the request is being generated\n// applied {amount}\n\nsocket.on(\"backupGame\", () => {\n    game_backup = _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"export_game\"]();\n    console.log(\"backing up\");\n});\n\nfunction cancelRoll() {\n    socket.emit(\"removeRollRequest\", current_session, options.get(this.id));\n    let index = options.get(this.id).index;\n    options.set(this.id, index);\n}\n\nsocket.on(\"removeRoll\", () => {\n    document.getElementById('roll-button').outerHTML = priorButton.oHTML;\n    document.getElementById('roll-button').innerHTML = priorButton.iHTML;\n    document.getElementById('roll-button').disabled = priorButton.dis;\n    document.getElementById('roll-button').onclick = priorButton.click;\n})\n\nsocket.on(\"enableRoll\", (request_data) => {\n    priorButton = { oHTML: document.getElementById('roll-button').outerHTML, iHTML: document.getElementById('roll-button').innerHTML,\n        dis: document.getElementById('roll-button').disabled, click: document.getElementById('roll-button').onclick };\n    document.getElementById('roll-button').disabled = false;\n    document.getElementById('roll-button-label').innerHTML = 'Roll to attempt ' + game_backup.abilities[request_data.request.subtype_key].name;\n    document.getElementById('roll-button').onclick = roll20;\n    options.set('roll-button', request_data);\n})\n\nfunction roll20() {\n    document.getElementById('roll-button').disabled = true;\n    document.getElementById('roll-button-label').innerHTML = '';\n    document.getElementById('roll-button').onclick = '';\n    let roll = Math.floor(Math.random() * 20) + 1;\n    let name = options.get(this.id).request.caster;\n    socket.emit(\"roll20\", current_session, roll, name, options.get(this.id).index);\n    options.delete('roll-button');\n}\n\nsocket.on(\"confirmSuccess\", (index) => {\n    document.getElementById(\"req-approve\" + index.toString()).onclick = approveRequest;\n    document.getElementById(\"req-approve\" + index.toString()).disabled = false;\n    document.getElementById(\"req-approve\" + index.toString()).click();\n})\n\nsocket.on(\"confirmFailure\", (index) => {\n    document.getElementById(\"req-decline\" + index.toString()).click();\n    document.getElementById(\"req-decline\" + index.toString()).onclick = declineRequest;\n    document.getElementById(\"req-decline\" + index.toString()).click();\n})\n\nfunction approveRequest() {\n    let data = options.get(this.id);\n    // if request actiontype = 1? ability then do sumn else\n    ordered_requests.splice(data.index, 1);\n    socket.emit(\"approveRequest\", current_session, data.request, data.user, data.msg);\n    document.getElementById(\"req-div\" + data.index.toString()).remove();\n    listRequests();\n}\n\nfunction declineRequest() {\n    ordered_requests.splice(options.get(this.id), 1);\n    document.getElementById(\"req-div\" + options.get(this.id)).remove();\n    listRequests();\n}\n\nfunction grantAccess() {\n    socket.emit(\"grantAccess\", current_session, options.get(this.id));\n    console.log(\"granting access\");\n    console.log(access_req_list[options.get(this.id)]);\n    document.getElementById(\"access-div\" + options.get(this.id).toString()).remove();\n    getAccessRequests()\n}\n\nsocket.on(\"addTokenAccess\", (token) => {\n    if (token === null) \n        { set_assignments = new Map(); blockCard(); return; }\n    document.getElementById(\"role_id\").innerHTML = 'Role: ' + game_backup.characters[token].sheet.name;\n    set_assignments.set(token, 3.0);\n    console.log(token);\n})\n\nfunction removeAccess() {\n    socket.emit(\"removeAccess\", current_session, options.get(this.id));\n    console.log(\"removing access\");\n    document.getElementById(\"access-div\" + options.get(this.id).toString()).remove();\n    getAccessRequests();\n}\n\nfunction loadAbles() {\n    button2.disabled = true;\n    document.getElementById(\"content2\").innerHTML = '';\n    for (var i = 0; i < token_data.sheet.abilities.length; i++) {\n        button2.disabled = false;\n        document.getElementById(\"content2\").innerHTML = document.getElementById(\"content2\").innerHTML \n            + '<button id=\"abil-button' + i + '\" class=\"mini-collapsible\">' \n            + game_backup.abilities[token_data.sheet.abilities[i]].name + '</button>';\n        options.set('abil-button' + i, token_data.sheet.abilities[i]);\n    }\n    for (var i = 0; i < token_data.sheet.abilities.length; i++) {\n        document.getElementById(\"abil-button\" + (i).toString()).onclick = getAbles;\n    }\n}\n\nfunction loadItems() {\n    button3.disabled = true;\n    document.getElementById(\"content3\").innerHTML = '';\n    for (var i = 0; i < token_data.sheet.items.length; i++) {\n        button3.disabled = false;\n        document.getElementById(\"content3\").innerHTML = document.getElementById(\"content3\").innerHTML \n            + '<button id=\"item-button' + i + '\" class=\"mini-collapsible\">' + token_data.sheet.items[i].name + '</button>';\n        options.set('item-button' + i, i);\n    }\n    for (var i = 0; i < token_data.sheet.items.length; i++) {\n        document.getElementById(\"item-button\" + (i).toString()).onclick = getItems;\n    }\n}\n\nfunction loadEquip() {\n    button4.disabled = true;\n    document.getElementById(\"content4\").innerHTML = '';\n    var equips = new Map(Object.entries(token_data.sheet.equipment))\n    var counter = 0;\n    for (const [key, value] of equips) {\n        button4.disabled = false;\n        document.getElementById(\"content4\").innerHTML = document.getElementById(\"content4\").innerHTML \n            + '<button id=\"game-button' + counter + '\" class=\"mini-collapsible\">' + value.name + '</button>';\n        options.set('game-button' + counter, key);\n        counter++;\n    }\n    while(counter != 0) {\n        counter--;\n        document.getElementById(\"game-button\" + (counter).toString()).onclick = getEquip;\n    }\n}\n\nfunction renderCard() {\n    document.getElementById(\"card\").innerHTML = '<h1 class=\"card-head\" style=\"font-style: italic\">' + token_data.sheet.name + '</h1>' +\n        '<h2 class=\"card-alt\"> HP: ' + token_data.sheet.hitpoints + ' / ' + token_data.sheet.max_hp + '</h2>' + \n        '<h2 class=\"card-head\"> Speed: ' + token_data.sheet.speed + '</h2>' + \n        '<h2 class=\"card-alt\"> Initiative: ' + token_data.sheet.initiative + '</h2>';\n    let stats = new Map(Object.entries(token_data.sheet.stats));\n    let style = 'class=\"card-alt\"';\n    for (let [key, value] of stats) {\n        if (style == 'class=\"card-alt\"') {style = 'class=\"card-head\"'; }\n        else { style = 'class=\"card-alt\"'; }\n        document.getElementById(\"card\").innerHTML = document.getElementById(\"card\").innerHTML +\n            `<h2 ${style}> ${key}: ${value} </h2>`;\n    }\n}\n\nfunction clickOption() { \n    // make function for each type of request\n    // wasm.gen_request(token, ) -> returns (ap cost, request)\n    let new_row = temp_toks.get(this)[0];\n    let new_col = temp_toks.get(this)[1];\n\n    console.log(action_type, \"\", _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"get_char\"](token_data.row, token_data.column), \n    temp_toks.get(this)[0], temp_toks.get(this)[1]);\n\n    let ap_cost = (_bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"get_cell_distance\"](token_data.row, token_data.column, new_row, new_col) / token_data.sheet.speed) * 3.0;\n\n    let req = _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"generate_request\"](action_type, \"\", current_token, new_row, new_col);\n    if (!requests.has(current_token)) {\n        requests.set(current_token, new Array());\n    }\n\n    console.log(requests);\n    console.log(requests.get(current_token));\n    let new_arr = requests.get(current_token);\n    new_arr.push(req);\n    requests.set(current_token, new_arr);\n\n    set_assignments.set(_bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"get_char\"](new_row, new_col), set_assignments.get(_bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"get_char\"](new_row, new_col))-ap_cost);\n    console.log(set_assignments.get(_bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"get_char\"](new_row, new_col)));\n    if (set_assignments.get(_bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"get_char\"](new_row, new_col)) < 1) {\n        socket.emit(\"addTurn\", current_session, current_user, in_game_name, requests.get(current_token));\n        requests.delete(current_token);\n        blockCard();\n    }\n    logMessage(`You have ${parseInt(set_assignments.get(current_token))} actions left`);\n    clearTempTokens();\n    token_data = _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"find_character\"](new_row, new_col);\n    current_token = _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"get_char\"](new_row, new_col);\n    console.log(token_data);\n    let dim = _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"get_dimensions\"]();\n    draw_lines(dim[1], dim[0], _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"board_to_string\"]());\n    logMessage(\"move \" + token_data.sheet.name + \" to point \" + new_row + \", \" +  new_col);\n    loadItems();\n    loadAbles();\n    loadEquip();\n}\n\nfunction clearTempTokens() {\n    for (const key of temp_toks.keys()) {\n        application.stage.removeChild(key);\n    }\n    temp_toks.clear();\n}\n\nfunction create_clickable(char, x, y, row, col, func, map)\n{\n    var label = new PIXI.Text(char, hd_moji);\n    label.updateText();\n    var label = new PIXI.Sprite(label.texture);\n    label.anchor.set(0.5);\n    label.width = square_size;\n    label.height = square_size * .8;\n    label.x = x;\n    label.y = y;\n    label.interactive = true;\n    label.buttonMode = true;\n    label.on('pointerdown', func);\n    map.set(label, [Math.round(row), Math.round(col)]);\n    application.stage.addChild(label);\n}\n\nfunction highlight_cells(cells, func)\n{\n    clearTempTokens();\n    for (let cell = 0; cell < cells.length; cell++) {\n        create_clickable(\n            \"🚩\", \n            cells[cell][1] * square_size + square_size/2,\n            cells[cell][0] * square_size + square_size/2,\n            cells[cell][0], \n            cells[cell][1],\n            func,\n            temp_toks\n        );\n    }\n}\n\nfunction draw_editable_grid(rows, columns, tile_map)\n{\n    application.stage.removeChildren();\n    application.renderer.resize((square_size*rows), (square_size*columns));\n    let tile = 0;\n    let end_of_tiles = false;\n    for (let j = 0; j < (square_size*columns); j+= square_size)\n        for (let i = 0; i < (square_size*rows); i+=square_size) {\n            let char = '0';\n            if (!end_of_tiles) \n                { char = tile_map[tile]; }\n            createTogglable(char, i + square_size/2, j + square_size/2, j/square_size, i/square_size);\n            if (tile >= tile_map.length) { end_of_tiles = true; } \n            tile++;\n        }\n}\n\nfunction createTogglable(char, x, y, row, col) {\n    if (char == '0') {\n        const box = new PIXI.Graphics()\n        .lineStyle(1, 0xBBBBBB, 1);\n        box.drawRect(x, y, square_size, square_size);\n        var sprite = new PIXI.Sprite(application.renderer.generateTexture(box));\n    }\n    else if (char == '1') {\n        const box = new PIXI.Graphics()\n        .lineStyle(1, 0xBBBBBB, 1);\n        box.beginFill(0xAAAAAA);\n        box.drawRect(x, y, square_size, square_size);\n        sprite = new PIXI.Sprite(application.renderer.generateTexture(box));\n    } \n    else {\n        var label = new PIXI.Text(char, hd_moji);\n        label.updateText();\n        sprite = new PIXI.Sprite(label.texture);\n        sprite.width = square_size;\n        sprite.height = square_size * .8;\n    }\n    \n    sprite.anchor.set(0.5);\n    sprite.x = x;\n    sprite.y = y;\n    \n    sprite.interactive = true;\n    sprite.buttonMode = true;\n    sprite.on('pointerdown', toggleTile);\n    temp_toks.set(sprite, {x_coord: x, y_coord: y, grid_row: Math.round(row), grid_col: Math.round(col)});\n    application.stage.addChild(sprite);\n}\n\nfunction toggleTile() {\n    let tok = temp_toks.get(this);\n    createTogglable(_bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"toggle_cell\"](tok.grid_row, tok.grid_col), tok.x_coord, tok.y_coord, tok.grid_row, tok.grid_col);\n    reloadNewCharacters();\n    application.stage.removeChild(this);\n}\n\nfunction draw_grid(rows, columns, tile_map)\n{\n    application.stage.removeChildren();\n    application.renderer.resize((square_size*rows), (square_size*columns));\n    let tile = 0;\n    let end_of_tiles = false;\n    for (let j = 0; j < (square_size*columns); j+= square_size)\n        for (let i = 0; i < (square_size*rows); i+=square_size) {\n            const box = new PIXI.Graphics()\n            .lineStyle(1, 0xBBBBBB, 1);\n            if (tile_map[tile] == '1') {\n                box.beginFill(0xAAAAAA);\n            }\n            box.drawRect(i, j, square_size, square_size);\n            var sprite = new PIXI.Sprite(application.renderer.generateTexture(box));\n            sprite.anchor.set(0.5);\n            sprite.x = i + square_size/2;\n            sprite.y = j + square_size/2;\n            application.stage.addChild(sprite);\n\n            if (tile >= tile_map.length) { end_of_tiles = true; } \n            if (tile_map[tile] != '0' && tile_map[tile] != '1' && !end_of_tiles) {\n                var label = new PIXI.Text(tile_map[tile], hd_moji);\n                label.updateText();\n                var label = new PIXI.Sprite(label.texture);\n                label.anchor.set(0.5);\n                label.width = square_size;\n                label.height = square_size * .8;\n                label.x = i + square_size/2;\n                label.y = j + square_size/2;\n                application.stage.addChild(label);\n            }\n            tile++;\n        }\n}\n\nfunction draw_lines(rows, columns, tile_map)\n{\n    application.stage.removeChildren();\n    application.renderer.resize((square_size*rows), (square_size*columns));\n    let tile = 0;\n    let end_of_tiles = false;\n    for (let j = 0; j < (square_size*columns); j+= square_size)\n        for (let i = 0; i < (square_size*rows); i+=square_size) {\n            const box = new PIXI.Graphics()\n            .lineStyle(1, 0xBBBBBB, 1);\n            if (tile_map[tile] == '1') {\n                box.beginFill(0xAAAAAA);\n            }\n            box.drawRect(i, j, square_size, square_size);\n            var sprite = new PIXI.Sprite(application.renderer.generateTexture(box));\n            sprite.anchor.set(0.5);\n            sprite.x = i + square_size/2;\n            sprite.y = j + square_size/2;\n            application.stage.addChild(sprite);\n\n            if (tile >= tile_map.length) { end_of_tiles = true; } \n            if (tile_map[tile] != '0' && tile_map[tile] != '1' && !end_of_tiles) {\n                create_clickable(\n                    tile_map[tile], \n                    i + square_size/2,\n                    j + square_size/2,\n                    (j/square_size), \n                    (i/square_size),\n                    clickToken,\n                    tokens\n                );\n            }\n            tile++;\n        }\n}\n\n////////////////////////////////////////////////////////////////////////////////////\n\nfunction conciseTimestamp() {\n    let res = new Date().toString();\n    return res.substring(16, 31);\n}\n\nfunction logMessage(msg) {\n    document.getElementById(\"console\").innerHTML = '<p class=\"log\"> [' +\n        conciseTimestamp() + '] ' + msg + '</p>' + document.getElementById(\"console\").innerHTML;\n}\n\nconst getData = () => {\n    const docRef = Object(firebase_firestore__WEBPACK_IMPORTED_MODULE_2__[\"doc\"])(db, 'user_to_set', current_user);\n    Object(firebase_firestore__WEBPACK_IMPORTED_MODULE_2__[\"getDoc\"])(docRef).then((response) => {\n        if (response.exists()) {\n            user_sets = new Map(Object.entries(response.data().sets));\n            if (user_sets != null) {\n                document.getElementById(\"content3\").innerHTML = ''\n                document.getElementById(\"content4\").innerHTML = '';\n                options.clear();\n                button3.disabled = false;\n                button4.disabled = false;\n                var counter = 0;\n                console.log(user_sets);\n                for (const [key, value] of user_sets) {\n                    document.getElementById(\"content3\").innerHTML = document.getElementById(\"content3\").innerHTML \n                        + '<button id=\"set-button' + counter + '\" class=\"mini-collapsible\">' + key + '</button>';\n                    document.getElementById(\"content4\").innerHTML = document.getElementById(\"content4\").innerHTML \n                        + '<button id=\"game-button' + counter + '\" class=\"mini-collapsible\">' + key + '</button>';\n                    options.set('set-button' + counter, value);\n                    options.set('game-button' + counter, value);\n                    counter++;\n                }\n                while(counter != 0) {\n                    counter--;\n                    document.getElementById(\"set-button\" + (counter).toString()).onclick = startEditing;\n                    document.getElementById(\"game-button\" + (counter).toString()).onclick = startGame;\n                }\n                logMessage('Loaded ' + user_sets.size + ' games');\n            }\n        }\n        else { generateTutorial(); }\n    })\n};\n \nfunction saveAndExit() {\n    console.log(_bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"export_game\"]());\n    let baked_game = JSON.stringify(_bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"export_game\"]());\n    console.log(baked_game);\n    let docRef = Object(firebase_firestore__WEBPACK_IMPORTED_MODULE_2__[\"doc\"])(db, 'game_sets', current_game);\n    Object(firebase_firestore__WEBPACK_IMPORTED_MODULE_2__[\"setDoc\"])(docRef, { \"data\": baked_game }, {merge: true})\n            .then(() => {\n                window.location.reload();\n            });\n}\n\nfunction startEditing() {\n    console.log(options);\n    console.log(this.id);\n    console.log(options.get(this.id));\n    current_game = options.get(this.id);\n    const docRef = Object(firebase_firestore__WEBPACK_IMPORTED_MODULE_2__[\"doc\"])(db, 'game_sets', options.get(this.id));\n    Object(firebase_firestore__WEBPACK_IMPORTED_MODULE_2__[\"getDoc\"])(docRef).then((response) => { \n        //if (!response.exists()) { return;}\n        //console.log(response.data());\n        //console.log(response.data().data);\n        game_backup = JSON.parse(response.data().data);\n        _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"load_game\"](game_backup);\n        let dim = _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"get_dimensions\"]();\n        draw_grid(dim[1], dim[0], _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"board_to_string\"]());\n        \n        document.getElementById(\"roll-button\").disabled = false;\n        document.getElementById(\"roll-button-label\").innerHTML = 'Save and exit';\n        document.getElementById(\"roll-button\").onclick = saveAndExit;\n        document.getElementById(\"content4\").innerHTML = '';\n        button3.click();\n        \n        button1.onclick = resizeBoard;\n        button2.onclick = placeWalls;\n        button3.onclick = '';\n        button4.onclick = '';\n\n        button1.innerHTML = \"Resize board\";\n        button2.innerHTML = \"Place walls\";\n        button3.innerHTML = \"Add game piece\";\n        button4.innerHTML = \"Place tokens\";\n\n        button1.disabled = false;\n        button2.disabled = false;\n        button3.disabled = false;\n        button4.disabled = true;\n\n        document.getElementById(\"content3\").innerHTML = \n        '<button id=\"add-effect\" class=\"mini-collapsible\">Add effect</button>' + \n        '<button id=\"add-ability\" class=\"mini-collapsible\">Add ability</button>' + \n        '<button id=\"add-item\" class=\"mini-collapsible\">Add item</button>' + \n        '<button id=\"add-character\" class=\"mini-collapsible\">Add character</button>';\n\n        document.getElementById(\"add-effect\").onclick = addEffect;\n        document.getElementById(\"add-ability\").onclick = addAbility;\n        document.getElementById(\"add-item\").onclick = addItem;\n        document.getElementById(\"add-character\").onclick = addCharacter;\n    });\n}\n\nconst addEffect = () => {\n    document.getElementById(\"card\").style.height = '70%';\n    document.getElementById(\"card\").innerHTML = '<h1 class=\"card-head\">New effect</h1>' + \n        `<form name=\"effectForm\" style=\"margin: 5px; font-family:Helvetica;\">\n        Name: <input type=\"text\" name=\"name\" style=\"margin-top: 8px\" required> <br>\n        Duration: <input type=\"number\" name=\"duration\" style=\"margin-top: 8px\" required> <br>\n        Affected Stat: <input type=\"text\" name=\"stat\" style=\"margin-top: 8px\" required> <br>\n        Min effect amount: <input type=\"number\" name=\"min\" style=\"margin-top: 8px\" required> <br>\n        Max effect amount: <input type=\"number\" name=\"max\" style=\"margin-top: 8px\" required> <br>\n        <label for=\"temp\"> Temporary? </label> \n        <input type=\"checkbox\" name=\"temp\" style=\"margin-top: 8px\"> <br>\n        <input id=\"a\" type=\"submit\" value=\"Submit\" style=\"margin-top: 5px; padding: 2px\">\n        </form>`;\n        document.effectForm.onsubmit = function(e) {\n            e = e || window.event;\n            e.preventDefault();\n            alert(document.forms[\"effectForm\"][\"name\"].value);\n            _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"add_effect\"](\n                document.forms[\"effectForm\"][\"name\"].value, \n                document.forms[\"effectForm\"][\"duration\"].value, \n                document.forms[\"effectForm\"][\"stat\"].value,\n                document.forms[\"effectForm\"][\"min\"].value,\n                document.forms[\"effectForm\"][\"max\"].value,\n                document.forms[\"effectForm\"][\"temp\"].checked\n            );\n            document.getElementById(\"card\").style.height = '0%';\n            document.getElementById(\"card\").innerHTML = '';\n            console.log(_bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"export_game\"]());\n            e.returnValue = false;\n        };\n}\n\nconst addAbility = () => {\n    document.getElementById(\"card\").style.height = '70%';\n    let effects = new Map(Object.entries(_bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"export_game\"]().effects));\n    let effect_options = '<option value=\"\">None</option>';\n    for (let key of effects.keys()) {\n        effect_options += `<option value=\"${key}\">${key}</option>`;\n    }\n    document.getElementById(\"card\").innerHTML = '<h1 class=\"card-head\">New ability</h1>' + \n        `<form id=\"abil-form\" name=\"abilityForm\" style=\"margin: 5px; font-family:Helvetica;\">\n        <input id=\"a\" type=\"submit\" value=\"Submit\" style=\"margin-top: 5px; padding: 2px\"> <br>\n        Name: <input type=\"text\" name=\"name\" style=\"margin-top: 8px\" required> <br>\n        Range: <input type=\"number\" name=\"range\" style=\"margin-top: 8px\" required> <br>\n        Action Points: <input type=\"select\" min=\"1\" max=\"5\" name=\"ap\" style=\"margin-top: 8px\" required> <br>\n        Casting roll min: <input type=\"number\" name=\"min\" style=\"margin-top: 8px\" required> <br>\n        Casting roll max: <input type=\"number\" name=\"max\" style=\"margin-top: 8px\" required> <br>\n        Stat modifier: <input type=\"text\" name=\"mod\" style=\"margin-top: 8px\"> <br>\n        Requirement: <input type=\"text\" name=\"require\" style=\"margin-top: 8px\"> <br>\n        <label for=\"target\">Target effect:</label> <select id=\"target\" name=\"target\" form=\"abil-form\">${effect_options}</select>\n        <br><label for=\"caster\">Caster effect:</label> <select id=\"caster\" name=\"caster\" form=\"abil-form\">${effect_options}</select></form>`;\n    document.abilityForm.onsubmit = function(e) {\n        e = e || window.event;\n        e.preventDefault();\n        let targ = document.forms[\"abilityForm\"][\"target\"].value;\n        let cast = document.forms[\"abilityForm\"][\"caster\"].value;\n        let reqs = document.forms[\"abilityForm\"][\"require\"].value;\n        let mod = document.forms[\"abilityForm\"][\"mod\"].value;     // may be null\n\n        if (targ == \"\") { targ = null; }\n        if (cast == \"\") { cast = null; }\n        if (reqs == \"\") { reqs = null; }\n        if (mod == \"\") { mod = null; }\n        _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"add_ability\"](\n            document.forms[\"abilityForm\"][\"name\"].value,    // \n            document.forms[\"abilityForm\"][\"range\"].value,// \n            document.forms[\"abilityForm\"][\"ap\"].value,\n            document.forms[\"abilityForm\"][\"min\"].value,\n            document.forms[\"abilityForm\"][\"max\"].value,\n            mod,\n            reqs, // may be null\n            targ,  // may be NONE\n            cast   // may be NONE\n        );\n        console.log(_bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"export_game\"]());\n        document.getElementById(\"card\").style.height = '0%';\n        document.getElementById(\"card\").innerHTML = '';\n        e.returnValue = false;\n    };\n}\n\nconst addItem = () => {\n    document.getElementById(\"card\").style.height = '70%';\n    let effects = new Map(Object.entries(_bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"export_game\"]().effects));\n    let effect_options = '<option value=\"\">None</option>';\n    for (let key of effects.keys()) {\n        effect_options += `<option value=\"${key}\">${key}</option>`;\n    }\n    let abilities = new Map(Object.entries(_bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"export_game\"]().abilities));\n    let ability_options = '<option value=\"\">None</option>';\n    for (let key of abilities.keys()) {\n        ability_options += `<option value=\"${key}\">${key}</option>`;\n    }\n    document.getElementById(\"card\").innerHTML = '<h1 class=\"card-head\">New item</h1>' + \n        `<form id=\"item-form\" name=\"itemForm\" style=\"margin: 5px; font-family:Helvetica;\">\n        <input id=\"a\" type=\"submit\" value=\"Submit\" style=\"margin-top: 5px; padding: 2px\"> <br>\n        Name: <input type=\"text\" name=\"name\" style=\"margin-top: 8px\" required> <br>\n        Uses: <input type=\"number\" name=\"uses\" style=\"margin-top: 8px\" required> <br>\n        Weight: <input type=\"select\" min=\"0\" name=\"weight\" style=\"margin-top: 8px\" required> <br>\n        Equipment slot: <input type=\"text\" name=\"slot\" style=\"margin-top: 8px\"> <br>\n        <label for=\"effect\">Effect:</label> <select id=\"effect\" name=\"effect\" form=\"item-form\">${effect_options}</select><br>\n        <label for=\"ability\">Ability:</label> <select id=\"ability\" name=\"ability\" form=\"item-form\">${ability_options}</select>\n        </form>`;\n    document.itemForm.onsubmit = function(e) {\n        e = e || window.event;\n        e.preventDefault();\n        let slot = document.forms[\"itemForm\"][\"slot\"].value;\n        let effx = document.forms[\"itemForm\"][\"effect\"].value;\n        let abil = document.forms[\"itemForm\"][\"ability\"].value;\n\n        if (slot == \"\") { slot = null; }\n        if (effx == \"\") { effx = null; }\n        if (abil == \"\") { abil = null; }\n        _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"add_item\"](\n            document.forms[\"itemForm\"][\"name\"].value,    // \n            document.forms[\"itemForm\"][\"uses\"].value,// \n            document.forms[\"itemForm\"][\"weight\"].value,\n            slot,\n            effx, // may be null\n            abil  // may be NONE\n        );\n        console.log(_bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"export_game\"]());\n        document.getElementById(\"card\").style.height = '0%';\n        document.getElementById(\"card\").innerHTML = '';\n        e.returnValue = false;\n    };\n}\n\nconst addCharacter = () => {\n    document.getElementById(\"card\").style.height = '70%';\n    let token_options = '';\n    for(const tok of token_chars) {\n        token_options += `<option value=\"${tok}\">${tok}</option>`\n    }\n    let items = new Map(Object.entries(_bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"export_game\"]().items));\n    let item_options = '<option value=\"\">None</option>';\n    for (let key of items.keys()) {\n        item_options += `<option value=\"${key}\">${key}</option>`;\n    }\n    let abilities = new Map(Object.entries(_bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"export_game\"]().abilities));\n    let ability_options = '<option value=\"\">None</option>';\n    for (let key of abilities.keys()) {\n        ability_options += `<option value=\"${key}\">${key}</option>`;\n    }\n    document.getElementById(\"card\").innerHTML = '<h1 class=\"card-head\">New item</h1>' + \n        `<form id=\"character-form\" name=\"characterForm\" style=\"margin: 5px; font-family:Helvetica;\">\n        <input id=\"a\" type=\"submit\" value=\"Submit\" style=\"margin-top: 5px; padding: 2px\"> <br>\n        <label for=\"effect\">Token:</label> \n        <select id=\"token\" name=\"token\" style=\"margin-top: 8px\"form=\"character-form\" require>${token_options}</select>\n        Name: <input type=\"text\" name=\"name\" style=\"margin-top: 8px\" required> <br>\n        Speed: <input type=\"number\" name=\"speed\" min=\"0\" style=\"margin-top: 8px\" required> <br>\n        Initiative: <input type=\"number\" name=\"init\" min=\"0\" style=\"margin-top: 8px\" required> <br>\n        Hitpoints: <input type=\"number\" name=\"hp\" min=\"0\" style=\"margin-top: 8px\" required> <br>\n        Max hitpoints: <input type=\"number\" name=\"max\" min=\"0\" style=\"margin-top: 8px\" required> <br>\n        Strength: <input type=\"number\" name=\"str\" min=\"-5\" max=\"5\" style=\"margin-top: 8px\" required> <br>\n        Dexterity: <input type=\"number\" name=\"dex\" min=\"-5\" max=\"5\" style=\"margin-top: 8px\" required> <br>\n        Constitution: <input type=\"number\" name=\"con\" min=\"-5\" max=\"5\" style=\"margin-top: 8px\" required> <br>\n        Intelligence: <input type=\"number\" name=\"int\" min=\"-5\" max=\"5\" style=\"margin-top: 8px\" required> <br>\n        Wisdom: <input type=\"number\" name=\"wis\" min=\"-5\" max=\"5\" style=\"margin-top: 8px\" required> <br>\n        Charisma: <input type=\"number\" name=\"cha\" min=\"-5\" max=\"5\" style=\"margin-top: 8px\" required> <br>\n        Trait: <input type=\"text\" name=\"trait\" style=\"margin-top: 8px\"> <br>\n        <p style=\"font-family:Helvetica; margin-top: 8px; font-style: italic;\">-- Hold ctrl/command to select multiple --</p>\n        <label for=\"effect\">Items:</label> \n        <select id=\"items\" name=\"items\" style=\"margin-top: 8px\"form=\"character-form\" multiple>${item_options}</select>\n        <label for=\"effect\">Ability:</label> \n        <select id=\"abils\" name=\"abils\" style=\"margin-top: 8px\" form=\"character-form\" multiple>${ability_options}</select>\n        </form>`;\n    \n    document.characterForm.onsubmit = function(e) {\n        e = e || window.event;\n        e.preventDefault();\n        console.log(document.forms[\"characterForm\"][\"abils\"]);\n        console.log(document.forms[\"characterForm\"][\"abils\"].options);\n        \n        let trait = null;\n        if (document.forms[\"characterForm\"][\"trait\"].value != \"\") {\n            trait = document.forms[\"characterForm\"][\"trait\"].value;\n        }\n        _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"add_character\"](\n            document.forms[\"characterForm\"][\"token\"].value,\n            document.forms[\"characterForm\"][\"name\"].value,    \n            document.forms[\"characterForm\"][\"speed\"].value, \n            document.forms[\"characterForm\"][\"init\"].value,\n            document.forms[\"characterForm\"][\"hp\"].value,\n            document.forms[\"characterForm\"][\"max\"].value,\n            document.forms[\"characterForm\"][\"str\"].value,\n            document.forms[\"characterForm\"][\"dex\"].value,\n            document.forms[\"characterForm\"][\"con\"].value,\n            document.forms[\"characterForm\"][\"int\"].value,\n            document.forms[\"characterForm\"][\"wis\"].value,\n            document.forms[\"characterForm\"][\"cha\"].value,\n            trait\n        );\n        for (var option of document.forms[\"characterForm\"][\"items\"].options){\n            if (option.selected) {\n                if (option.value != \"\") {\n                    _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"give_item\"](document.forms[\"characterForm\"][\"token\"].value, option.value);\n                }\n            }\n        }\n        for (var option of document.forms[\"characterForm\"][\"abils\"].options){\n            if (option.selected) {\n                if (option.value != \"\") {\n                    _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"give_ability\"](document.forms[\"characterForm\"][\"token\"].value, option.value);\n                }\n            }\n        }\n        reloadNewCharacters();\n        console.log(_bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"export_game\"]());\n        document.getElementById(\"card\").style.height = '0%';\n        document.getElementById(\"card\").innerHTML = '';\n        e.returnValue = false;\n    }; \n}\n\nconst reloadNewCharacters = () => {\n    document.getElementById(\"content4\").innerHTML = '';\n    document.getElementById(\"button4\").disabled = true;\n    let characters = new Map(Object.entries(_bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"export_game\"]().sheets));\n    let index = 0;\n    for (const key of characters.keys()) {\n        document.getElementById(\"button4\").disabled = false;\n        document.getElementById(\"content4\").innerHTML = document.getElementById(\"content4\").innerHTML + \n            `<button id=\"tok-button${index}\" class=\"mini-collapsible\">${key}</button>`;\n        options.set('tok-button' + index, key);\n        index++;\n    }\n    while(index != 0) {\n        index--;\n        document.getElementById(\"tok-button\" + (index).toString()).onclick = getOpenSpaces;\n    }\n}\n\nfunction getOpenSpaces() {\n    current_token = options.get(this.id);\n    let dim = _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"get_dimensions\"]();\n    let columns = dim[0];\n    let rows = dim[1];\n    draw_grid(dim[1], dim[0], _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"board_to_string\"]());\n    let tile_map = _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"board_to_string\"]();\n    temp_toks.clear();\n    let tile = 0;\n    let end_of_tiles = false;\n    for (let j = 0; j < (square_size*columns); j+= square_size)\n        for (let i = 0; i < (square_size*rows); i+=square_size) {\n            if (!end_of_tiles){\n                if (tile_map[tile] != '0') {\n                    tile++;\n                    continue;\n                }\n            }\n            create_clickable('🚩', i + square_size/2, j + square_size/2, j/square_size, i/square_size, placeToken, temp_toks);\n            if (tile >= tile_map.length) { end_of_tiles = true; } \n            tile++;\n        }\n}\n\nfunction placeToken() {\n    _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"place_token\"](current_token, temp_toks.get(this)[0], temp_toks.get(this)[1]);\n    reloadNewCharacters();\n    let dim = _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"get_dimensions\"]();\n    draw_grid(dim[1], dim[0], _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"board_to_string\"]());\n}\n\nfunction placeWalls() {\n    let dim = _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"get_dimensions\"]();\n    draw_editable_grid(dim[1], dim[0], _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"board_to_string\"]());\n}\n\nfunction resizeBoard() {\n    let row_prompt = parseInt(prompt(\"Enter the new number of rows for the grid\"));\n    let col_prompt = parseInt(prompt(\"Enter the new number of columns for the grid\"));\n    if (row_prompt == NaN || col_prompt == NaN ||row_prompt == null || col_prompt === null) {\n        alert(\"Please only enter integer values!\");\n        return;\n    }\n    _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"resize_board\"](row_prompt, col_prompt);\n    draw_grid(col_prompt, row_prompt, _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"board_to_string\"]());\n    console.log(_bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"export_game\"]());\n}\n\nconst tutorial = `{\"characters\":{\"🐉\":{\"row\":2,\"column\":18,\"initiative\":2,\"sheet\":{\"name\":\"Dragon Boss\",\"speed\":2,\"initiative\":2,\"hitpoints\":14,\"max_hp\":14,\"stats\":{\"Intelligence\":-1,\"Wisdom\":0,\"Strength\":4,\"Constitution\":3,\"Dexterity\":-3,\"Charisma\":-4},\"traits\":[],\"items\":[],\"equipment\":{},\"abilities\":[\"Slash\"],\"effects\":{}}},\"🧝\":{\"row\":0,\"column\":0,\"initiative\":4,\"sheet\":{\"name\":\"Warrior\",\"speed\":5,\"initiative\":4,\"hitpoints\":20,\"max_hp\":20,\"stats\":{\"Wisdom\":-2,\"Strength\":3,\"Intelligence\":0,\"Constitution\":1,\"Charisma\":-1,\"Dexterity\":5},\"traits\":[],\"items\":[{\"name\":\"Short sword\",\"uses\":-1,\"weight\":2,\"slots\":[\"main_hand\"],\"effects\":[],\"abilities\":[\"Slash\"]}],\"equipment\":{},\"abilities\":[],\"effects\":{}}},\"💀\":{\"row\":6,\"column\":2,\"initiative\":0,\"sheet\":{\"name\":\"Skeleton\",\"speed\":4,\"initiative\":0,\"hitpoints\":10,\"max_hp\":10,\"stats\":{\"Constitution\":-2,\"Strength\":2,\"Charisma\":0,\"Wisdom\":-4,\"Intelligence\":-2,\"Dexterity\":5},\"traits\":[],\"items\":[{\"name\":\"Short sword\",\"uses\":-1,\"weight\":2,\"slots\":[\"main_hand\"],\"effects\":[],\"abilities\":[\"Slash\"]}],\"equipment\":{},\"abilities\":[],\"effects\":{}}}},\"sheets\":{},\"abilities\":{\"Slash\":{\"name\":\"Slash\",\"range\":1,\"action_points\":2,\"casting_roll\":[1,20],\"stat_modifier\":null,\"requirements\":[],\"target_effects\":[\"Slash damage\"],\"caster_effects\":[]}},\"effects\":{\"Slash\":{\"name\":\"Slash\",\"duration\":0,\"target_stat\":\"health\",\"modifier\":[-10,-1],\"temporary\":false},\"Slash damage\":{\"name\":\"Slash damage\",\"duration\":0,\"target_stat\":\"health\",\"modifier\":[-10,-1],\"temporary\":false}},\"items\":{\"Short sword\":{\"name\":\"Short sword\",\"uses\":-1,\"weight\":2,\"slots\":[\"main_hand\"],\"effects\":[],\"abilities\":[\"Slash\"]}},\"grid\":[[\"🧝\",\"0\",\"0\",\"1\",\"0\",\"0\",\"0\",\"1\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"1\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\"],[\"0\",\"0\",\"0\",\"1\",\"0\",\"0\",\"0\",\"1\",\"0\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"0\",\"0\",\"0\",\"0\",\"0\",\"1\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\"],[\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"1\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"1\",\"0\",\"0\",\"🐉💀\",\"0\",\"0\",\"0\",\"0\",\"1\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"1\",\"0\",\"1\",\"0\",\"1\",\"0\",\"0\",\"0\",\"0\",\"1\",\"0\",\"0\",\"0\",\"0\",\"0\"],[\"1\",\"1\",\"0\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"0\",\"1\",\"1\",\"1\",\"1\",\"0\",\"1\",\"0\",\"1\",\"0\",\"0\",\"0\",\"0\",\"1\",\"0\",\"0\",\"0\",\"0\",\"0\"],[\"0\",\"0\",\"0\",\"1\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"1\",\"0\",\"0\",\"1\",\"0\",\"1\",\"0\",\"1\",\"1\",\"0\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\"],[\"0\",\"0\",\"0\",\"1\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"1\",\"0\",\"0\",\"1\",\"0\",\"1\",\"0\",\"1\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\"],[\"0\",\"0\",\"0\",\"1\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"1\",\"0\",\"0\",\"0\",\"0\",\"1\",\"0\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"0\"],[\"0\",\"0\",\"0\",\"1\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"1\",\"0\",\"0\",\"0\",\"1\",\"1\",\"0\",\"1\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\"],[\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"1\",\"0\",\"1\",\"1\",\"1\",\"0\",\"0\",\"1\",\"0\",\"0\",\"0\",\"1\",\"1\",\"1\",\"1\",\"1\",\"1\",\"0\"],[\"0\",\"0\",\"0\",\"1\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"1\",\"0\",\"1\",\"0\",\"0\",\"0\",\"1\",\"1\",\"0\",\"0\",\"0\",\"1\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\"],[\"0\",\"0\",\"0\",\"1\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\",\"1\",\"0\",\"0\",\"0\",\"1\",\"1\",\"1\",\"0\",\"0\",\"0\",\"0\",\"1\",\"0\",\"0\",\"0\",\"0\",\"0\",\"0\"]],\"requests\":[]}`;\n\nconst generateTutorial = () => {\n    _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"reset_session\"]();\n    _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"load_game\"](JSON.parse(tutorial));\n    let baked_game = JSON.stringify(_bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"export_game\"]());\n    Object(firebase_firestore__WEBPACK_IMPORTED_MODULE_2__[\"addDoc\"])(Object(firebase_firestore__WEBPACK_IMPORTED_MODULE_2__[\"collection\"])(db, 'game_sets'), { \"data\": baked_game }).then((response)=> {\n        Object(firebase_firestore__WEBPACK_IMPORTED_MODULE_2__[\"setDoc\"])(Object(firebase_firestore__WEBPACK_IMPORTED_MODULE_2__[\"doc\"])(db, 'user_to_set', current_user), { sets: { \"Tutorial\": response.id } }, { merge: true })\n            .then(() => {\n                getData();\n                logMessage(\"Added tutorial map to your games\");\n            });\n        _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"reset_session\"]();\n    })\n}\n\nfunction initialSignIn() {\n    Object(firebase_auth__WEBPACK_IMPORTED_MODULE_1__[\"signInWithPopup\"])(auth, googleProv)\n        .then((response) => {\n        document.getElementById(\"user_id\").innerHTML = 'User: ' + response.user.displayName;\n        logMessage('Welcome ' + response.user.displayName);\n        current_user = response.user.uid;\n        in_game_name = response.user.displayName;\n        getData();\n        console.log(user_sets);\n        uponSigningIn();\n    })\n}\n\nfunction getMoves() {\n    action_type = 0;\n    let distance = (set_assignments.get(current_token) / 3.0) * token_data.sheet.speed;\n    highlight_cells(_bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"collect_cell_options\"](token_data.row, token_data.column, distance, false), clickOption);\n}\n\nfunction getAbles() {\n    action_type = 1;\n    current_abil_key = options.get(this.id);\n    let abil_range = game_backup.abilities[current_abil_key].range;\n    if (abil_range > 0) {\n        highlight_cells(_bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"collect_cell_options\"](token_data.row, token_data.column, abil_range, true), clickTarget);\n    }\n}\n\nfunction clickTarget() {\n    let new_row = temp_toks.get(this)[0];\n    let new_col = temp_toks.get(this)[1];\n    let char = _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"get_char\"](token_data.row, token_data.column);\n    console.log(action_type, current_abil_key, _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"get_char\"](token_data.row, token_data.column), new_row, new_col);\n\n    let req = _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"generate_request\"](action_type, current_abil_key, char, new_row, new_col);\n    if (!requests.has(current_token)) {\n        requests.set(current_token, new Array());\n    }\n    \n    console.log(requests);\n    console.log(requests.get(current_token));\n    let new_arr = requests.get(current_token);\n    new_arr.push(req);\n    requests.set(current_token, new_arr);\n\n    set_assignments.set(char, set_assignments.get(current_token)-2);\n    if (set_assignments.get(current_token) < 1) {\n        socket.emit(\"addTurn\", current_session, current_user, in_game_name, requests.get(current_token));\n        requests.delete(current_token);\n        blockCard();\n    }\n\n    logMessage(`You have ${parseInt(set_assignments.get(current_token))} actions left`);\n    token_data = _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"find_character\"](token_data.row, token_data.column);\n    console.log(token_data);\n    clearTempTokens();\n    loadItems();\n    loadAbles();\n    loadEquip();\n}\n\nsocket.on(\"executeRequest\", (req) => {\n    console.log(req);\n    _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"execute_request\"](req);\n    clearTempTokens();\n    let dim = _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"get_dimensions\"]();\n    draw_lines(dim[1], dim[0], _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"board_to_string\"]());\n    clearTempTokens();\n\n    if (token_data === undefined) return;\n    if (!set_assignments.has(req.caster)) return;\n    if (set_assignments.get(req.caster) <= 0) return;\n\n    options.clear();\n    token_data = _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"get_character\"](req.caster); // bugged idk\n    renderCard();\n    loadItems();\n    loadAbles();\n    loadEquip();\n});\n\nfunction getItems() {\n    action_type = 2;\n    console.log(action_type, options.get(this.id).toString(), _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"get_char\"](token_data.row, token_data.column), 0, 0);\n    \n    let req = _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"generate_request\"](action_type, options.get(this.id).toString(), _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"get_char\"](token_data.row, token_data.column), 0, 0);\n    if (!requests.has(req.caster)) {\n        requests.set(req.caster, new Array());\n    }\n    \n    console.log(requests);\n    console.log(requests.get(current_token));\n    let new_arr = requests.get(current_token);\n    new_arr.push(req);\n    requests.set(current_token, new_arr);\n\n    set_assignments.set(req.caster, set_assignments.get(current_token)-1);\n    if (set_assignments.get(current_token) < 1) {\n        socket.emit(\"addTurn\", current_session, current_user, in_game_name, requests.get(current_token));\n        requests.delete(current_token);\n        blockCard();\n    }\n    logMessage(`You have ${parseInt(set_assignments.get(current_token))} actions left`);\n    token_data = _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"find_character\"](token_data.row, token_data.column);\n    console.log(token_data);\n    clearTempTokens();\n    loadItems();\n    loadAbles();\n    loadEquip();\n}\n\nsocket.on(\"updateBackup\", () => {\n    game_backup = _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"export_game\"]();\n})\n\nfunction getAccessRequests() { \n    console.log(\"geetting requests\");\n    console.log(current_session);\n    socket.emit(\"getAccessRequests\", current_session); \n}\n\nfunction getEquip() {\n    action_type = 3;\n    console.log(action_type, options.get(this.id).toString(), _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"get_char\"](token_data.row, token_data.column), 0, 0);\n    \n    let req = _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"generate_request\"](action_type, options.get(this.id).toString(), _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"get_char\"](token_data.row, token_data.column), 0, 0);\n    if (!requests.has(req.caster)) {\n        requests.set(req.caster, new Array());\n    }\n    \n    console.log(requests);\n    console.log(requests.get(req.caster));\n    let new_arr = requests.get(req.caster);\n    new_arr.push(req);\n    requests.set(req.caster, new_arr);\n\n    set_assignments.set(req.caster, set_assignments.get(req.caster)-2);\n    if (set_assignments.get(req.caster) <= 0) {\n        socket.emit(\"addTurn\", current_session, current_user, in_game_name, requests.get(req.caster));\n        requests.clear();\n    }\n    \n    token_data = _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"find_character\"](token_data.row, token_data.column);\n    console.log(token_data);\n    clearTempTokens();\n    loadItems();\n    loadAbles();\n    loadEquip();\n}\n\ndocument.chat.onsubmit = function(e) {\n    e = e || window.event;\n    e.preventDefault();\n    socket.emit(\"broadcastLog\", current_session, `${in_game_name} says: ${document.forms[\"chat\"][\"msg\"].value}`);\n    document.forms[\"chat\"][\"msg\"].value = '';\n    e.returnValue = false;\n};\n\nsocket.on(\"transactionFailed\", (str) => { alert(str) });\n\nsocket.on(\"startSession\", (room) => {\n    console.log(game_backup);\n    current_session = room;\n    \n    document.getElementById(\"msg\").disabled = false;\n    document.getElementById(\"sub\").disabled = false;\n\n    document.getElementById(\"session_id\").innerHTML = `Session: ${room}`;\n    for (const key in game_backup.characters) {\n        set_assignments.set(`${key}`, 3.0);\n    }\n\n    console.log(set_assignments);\n    application.stage.removeChild(basicText);\n    let dim = _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"get_dimensions\"]();\n    draw_lines(dim[1], dim[0], _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"board_to_string\"]());\n    \n    document.getElementById(\"role_id\").innerHTML = 'Role: <button id=\"dm-button\">Dungeon Master</button>';\n    document.getElementById(\"dm-button\").disabled = false;\n    document.getElementById(\"dm-button\").onclick = getAccessRequests;\n    document.getElementById(\"card\").style.height = \"70%\";\n    document.getElementById(\"roll-button\").disabled = false;\n    document.getElementById(\"roll-button-label\").innerHTML = \"End turn\";\n    document.getElementById(\"roll-button\").onclick = endTurn;\n    \n    button1.onclick = getMoves;\n    button2.onclick = null;\n    button3.onclick = null;\n    button4.onclick = null;\n\n    button1.innerHTML = \"Movements\";\n    button2.innerHTML = \"Abilities\";\n    button3.innerHTML = \"Items\";\n    button4.innerHTML = \"Equipment\";\n\n    button1.disabled = true;\n    button2.disabled = true;\n    button3.disabled = true;\n    button4.disabled = true;\n    \n    document.getElementById(\"content3\").innerHTML = \"\";\n    document.getElementById(\"content4\").innerHTML = \"\";\n\n    logMessage(\"Click the dungeon master button on the right to manage pending requests\");\n    logMessage(\"You have \" + 3 + \" actions left\");\n});\n\nsocket.on(\"loadRequests\", (requests) => {\n    console.log(requests);\n    token_to_user = new Map();\n    for(var i = 0; i < requests.length; i++) {\n        token_to_user.set(requests[i].reqs[0].caster, requests[i].id);\n        _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"insert_request\"](requests[i].reqs[0].caster, requests[i].reqs);\n    }\n    _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"sort_requests\"]();\n    ordered_requests = _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"get_requests\"]();\n    listRequests();\n})\n\nfunction endTurn() {\n    socket.emit(\"endTurn\", current_session);\n    document.getElementById(\"roll-button\").disabled = false;\n    document.getElementById(\"roll-button-label\").innerHTML = \"Start next turn\";\n    document.getElementById(\"roll-button\").onclick = startTurn;\n}\n\nfunction startTurn() {\n    console.log(\"hello\");\n    socket.emit(\"startTurn\", current_session, JSON.stringify(_bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"export_game\"]()));\n    document.getElementById(\"roll-button\").disabled = false;\n    document.getElementById(\"roll-button-label\").innerHTML = \"End turn\";\n    document.getElementById(\"roll-button\").onclick = endTurn;\n}\n\nsocket.on(\"grantAllAccess\", () => {\n    for (const key in _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"export_game\"]().characters) {\n        set_assignments.set(`${key}`, 3.0);\n    }\n})\n\nfunction startGame() {\n    console.log(options);\n    console.log(this.id);\n    const docRef = Object(firebase_firestore__WEBPACK_IMPORTED_MODULE_2__[\"doc\"])(db, 'game_sets', options.get(this.id));\n    Object(firebase_firestore__WEBPACK_IMPORTED_MODULE_2__[\"getDoc\"])(docRef).then((response) => { \n        if (!response.exists()) { return;}\n        game_backup = JSON.parse(response.data().data);\n        _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"load_game\"](game_backup);\n        let room = prompt(\"Enter a room name\");\n        if (room === null) return\n        socket.emit(\"startHosting\", room, current_user, options.get(this.id), this.innerHTML);\n    });\n}\n\nfunction signOut() {\n    user_sets = null;\n    current_user = null;\n    current_session = null;\n    window.location.reload();\n}\n\nfunction initCreation() {\n    var set_name = prompt(\"Enter a name for the new game\");\n    if (set_name === null) { return; }\n    if (user_sets != null) { \n        if (user_sets.has(set_name)) {\n            alert(set_name + ' already taken!'); \n            return;\n        }\n    }\n\n    _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"reset_session\"]();\n    let baked_game = JSON.stringify(_bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"export_game\"]());\n    Object(firebase_firestore__WEBPACK_IMPORTED_MODULE_2__[\"addDoc\"])(Object(firebase_firestore__WEBPACK_IMPORTED_MODULE_2__[\"collection\"])(db, 'game_sets'), { \"data\": baked_game }).then((response)=> {\n        Object(firebase_firestore__WEBPACK_IMPORTED_MODULE_2__[\"setDoc\"])(Object(firebase_firestore__WEBPACK_IMPORTED_MODULE_2__[\"doc\"])(db, 'user_to_set', current_user), { sets: { [`${set_name}`]: response.id } }, { merge: true })\n            .then(() => {\n                logMessage('Added new game: ' + `${set_name}`);\n                getData();\n            });\n    })\n}\n\nsocket.on(\"syncBoards\", () => {\n    _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"load_game\"](game_backup);    \n    let dim = _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"get_dimensions\"]();\n    draw_lines(dim[1], dim[0], _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"board_to_string\"]());\n})\n\nfunction transitionPage() {\n    application.stage.removeChild(basicText);\n    let dim = _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"get_dimensions\"]();\n    draw_lines(dim[1], dim[0], _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"board_to_string\"]());\n    \n    document.getElementById(\"card\").style.height = \"70%\";\n    document.getElementById(\"roll-button\").disabled = true;\n    document.getElementById(\"roll-button\").onclick = '';\n    document.getElementById(\"roll-button-label\").innerHTML = \"\";\n    \n    button1.onclick = getMoves;\n    button2.onclick = null;\n    button3.onclick = null;\n    button4.onclick = null;\n\n    button1.innerHTML = \"Movements\";\n    button2.innerHTML = \"Abilities\";\n    button3.innerHTML = \"Items\";\n    button4.innerHTML = \"Equipment\";\n\n    button1.disabled = true;\n    button2.disabled = true;\n    button3.disabled = true;\n    button4.disabled = true;\n    \n    document.getElementById(\"content3\").innerHTML = \"\";\n    document.getElementById(\"content4\").innerHTML = \"\";\n\n    logMessage(\"You have \" + 3 + \" actions left\");\n\n    document.getElementById(\"msg\").disabled = false;\n    document.getElementById(\"sub\").disabled = false;\n}\n\nsocket.on(\"joinGame\", (room, key, assignments, game) => {\n    document.getElementById(\"session_id\").innerHTML = `Session: ${room}`;\n    if (game == null) {\n        const docRef = Object(firebase_firestore__WEBPACK_IMPORTED_MODULE_2__[\"doc\"])(db, 'game_sets', key);\n        Object(firebase_firestore__WEBPACK_IMPORTED_MODULE_2__[\"getDoc\"])(docRef).then((response) => { \n            if (!response.exists()) { return; }\n            if (assignments === null) set_assignments = new Map();\n            else { \n                for (let i = 0; i <assignments.length; i++) {\n                    set_assignments.set(assignments[i], 3.0);\n                }\n            }\n\n            game_backup = JSON.parse(response.data().data);\n            current_session = room;\n            console.log(game_backup);\n            _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"load_game\"](game_backup);\n\n            transitionPage();\n            return;\n        });\n    }\n    else {\n        console.log(assignments);\n        if (assignments === null) set_assignments = new Map();\n        else { \n            for (let i = 0; i <assignments.length; i++) {\n                set_assignments.set(assignments[i], 3.0);\n            }\n        }\n        _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"load_game\"](JSON.parse(game));\n        game_backup = _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"export_game\"]();\n        transitionPage();\n    }\n})\n\nsocket.on(\"hostRejoin\", (room, key, game) => {\n    document.getElementById(\"session_id\").innerHTML = `Session: ${room}`;\n    console.log(room);\n    if (game == null) {\n        const docRef = Object(firebase_firestore__WEBPACK_IMPORTED_MODULE_2__[\"doc\"])(db, 'game_sets', key);\n        Object(firebase_firestore__WEBPACK_IMPORTED_MODULE_2__[\"getDoc\"])(docRef).then((response) => { \n            if (!response.exists()) { return; }\n            game_backup = JSON.parse(response.data().data);\n            console.log(game_backup);\n            _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"load_game\"](game_backup);\n            socket.emit(\"confirmSession\", room);\n            return;\n        });\n    }\n    else {\n        _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"load_game\"](JSON.parse(game));\n        game_backup = _bd_pack_byte_dungeon__WEBPACK_IMPORTED_MODULE_4__[\"export_game\"]();\n        socket.emit(\"confirmSession\", room);\n    }\n})\n\nfunction joinGame() {\n    let room = prompt(\"Enter session id\");\n    if (room === null) {return}\n    current_session = room;\n    socket.emit(\"findSession\", current_user, in_game_name, room);\n}\n\n// Signed in, no session\nfunction uponSigningIn() {\n    document.getElementById(\"roll-button\").onclick = signOut;\n    document.getElementById(\"roll-button-label\").innerHTML = 'Sign Out';\n    button1.disabled = false;\n    button2.disabled = false;\n    button1.onclick = initCreation;\n    button2.onclick = joinGame;\n}\n\n// Signed in, with a session\n\n\n//# sourceURL=webpack:///./index.js?");

/***/ })

}]);